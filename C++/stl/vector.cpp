#include <iostream>
#include <vector>
using std::cout;
using std::cin;
using std::endl;
using std::vector;
/**
 * Библиотека стандартных шаблонов STL.
 * 
 * VECTOR
 * 
 */

int main()
{
    vector<int> myVector;
    // можно так инициализировать 
    // vector<int> myVector = {0, 12, 55};  
    // vector<int> myVector(10);  
    // vector<int> myVector(10, 0);  
    myVector.push_back(1);
    myVector.push_back(23);
    myVector.push_back(55);
    myVector.push_back(67);

    cout << "Number of elements in vector: " << myVector.size() << endl;

    // ----------------------------------------------------------------------------
    /**
     * функция at() альтернатива квадратным скобкам []
     * плюсы: проверяет не выходит ли индекс за пределы вектора.
     * минусы: работает медленее квадратных скобок []. 
     */
    // cout << myVector.at(1) << endl;
    // ----------------------------------------------------------------------------
    // очищает вектор
    // myVector.clear(); 
    // ----------------------------------------------------------------------------
    // удаляет последний элемент векторa
    // myVector.pop_back();
    // ----------------------------------------------------------------------------
    // выделяет память для вектора (capacity)
    // myVector.reserve(100);
    // ----------------------------------------------------------------------------
    // Ёмкость вектора. Ёмкость вектора это используемые элементы + неиспользуемые
    // Ёмкость выделяется автоматически при добавлении массива, чтобы не создавать 
    // новый массив при каждом добавлении
    // cout << myVector.capacity() << endl;
    // ----------------------------------------------------------------------------
    // Удаление всех неиспользуемых элементов. Пример, before: size = 8, capacity = 10;
    // after: size = 8, capacity = 8;
    // myVector.shrink_to_fit();
    // ----------------------------------------------------------------------------
    // функция проверяет не пустой ли вектор. Возращает тру, фолс.
    // cout << myVector.empty() << endl;
    // ----------------------------------------------------------------------------
    // изменяет размер вектора
    // resize(size, value) or resize(size)
    // myVector.resize(20);
    // ----------------------------------------------------------------------------
    // добавление или удаление элемента в заданной позиции с помощью итератора
    // myVector.insert(myVector.begin() + index, val);
    // myVector.erase(myVector.begin() + index);
    // ----------------------------------------------------------------------------

    return 0;
}